{"version":3,"file":"static/js/202.9dc61549.chunk.js","mappings":"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","sources":["components/AddButton.jsx","components/AddContactForm.jsx","components/ConfirmDialog.jsx","components/ContactList.jsx","components/Filter.jsx","pages/ContactListPage.jsx"],"sourcesContent":["import { Button } from '@mui/material';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nexport const AddButton = ({ onClick }) => {\n  return createPortal(\n    <Button\n      variant=\"contained\"\n      size=\"large\"\n      startIcon={<AddCircleOutlineIcon />}\n      onClick={onClick}\n      sx={{ position: 'fixed', bottom: '10%', right: '40%' }}\n    >\n      Add contact\n    </Button>,\n    document.querySelector('#modal-root')\n  );\n};\n\nAddButton.propType = {\n  onClick: PropTypes.func.isRequired,\n};\n","import Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { Box } from '@mui/material';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nexport default function AddContactForm({\n  onSubmit,\n  onCancel,\n  modalIsOpen,\n  formTitle,\n  itemData,\n}) {\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .min(2, 'Min 2 letter!')\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        'only letters, apostrophe, dash and spaces'\n      )\n      .required('Required!'),\n    number: yup\n      .string()\n      .matches(\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        'Invalid phone number.'\n      )\n      .required('Required!'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: itemData?.name || '',\n      number: itemData?.number || '',\n    },\n    validationSchema,\n    onSubmit: values => {\n      onSubmit({ id: itemData?.id, name: values.name, number: values.number });\n    },\n  });\n\n  return createPortal(\n    <div>\n      <Dialog open={modalIsOpen} onClose={onCancel}>\n        <Box component=\"form\" noValidate onSubmit={formik.handleSubmit}>\n          <DialogTitle>{formTitle}</DialogTitle>\n          <DialogContent>\n            <DialogContentText></DialogContentText>\n            <TextField\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              margin=\"dense\"\n              label=\"Name\"\n              fullWidth\n              variant=\"outlined\"\n              value={formik.values.name}\n              // pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              onChange={formik.handleChange}\n              required\n              onBlur={formik.handleBlur}\n              error={formik.touched.name && formik.errors.name ? true : false}\n              helperText={formik.touched.name && formik.errors.name}\n            />\n\n            <TextField\n              id=\"number\"\n              margin=\"dense\"\n              label=\"Phone number\"\n              fullWidth\n              variant=\"outlined\"\n              type=\"tel\"\n              name=\"number\"\n              value={formik.values.number}\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              onChange={formik.handleChange}\n              required\n              onBlur={formik.handleBlur}\n              error={\n                formik.touched.number && formik.errors.number ? true : false\n              }\n              helperText={formik.touched.number && formik.errors.number}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onCancel}>Cancel</Button>\n            <Button type=\"submit\">Ok</Button>\n          </DialogActions>\n        </Box>\n      </Dialog>\n    </div>,\n    document.querySelector('#modal-root')\n  );\n}\n\nAddContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  modalIsOpen: PropTypes.bool.isRequired,\n  formTitle: PropTypes.string,\n  itemData: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n  }),\n};\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from '@mui/material';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst ConfirmDialog = ({ title, children, id, setOpen, onConfirm }) => {\n  return createPortal(\n    <Dialog\n      open={id ? true : false}\n      onClose={() => setOpen(false)}\n      aria-labelledby=\"confirm-dialog\"\n    >\n      <DialogTitle id=\"confirm-dialog\">{title}</DialogTitle>\n      <DialogContent>{children}</DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"outlined\"\n          onClick={() => setOpen(null)}\n          color=\"secondary\"\n        >\n          No\n        </Button>\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            onConfirm(id);\n            setOpen(null);\n          }}\n          color=\"primary\"\n        >\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>,\n    document.querySelector('#modal-root')\n  );\n};\n\nexport default ConfirmDialog;\nConfirmDialog.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.string,\n  setOpen: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n};\n","import { useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContactThunk } from 'redux/contactSlice/thunk';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport {\n  Box,\n  Card,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  Typography,\n} from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\nimport ConfirmDialog from 'components/ConfirmDialog';\n\nconst ContactList = ({ onEdit }) => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const [confirmDeleteId, setConfirmDeleteId] = useState(null);\n\n  const contactList = useMemo(\n    () =>\n      (filter\n        ? contacts.filter(({ name }) =>\n            name.toLowerCase().includes(filter.toLowerCase())\n          )\n        : contacts\n      ).toSorted((a, b) =>\n        a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1\n      ),\n    [contacts, filter]\n  );\n\n  return (\n    <>\n      <List>\n        {contactList.map(({ id, name, number }) => (\n          <ListItem key={id}>\n            <Card\n              sx={{\n                display: 'flex',\n                flexWrap: 'nowrap',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                width: '100%',\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  flexDirection: { xs: 'column', sm: 'row' },\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  width: '100%',\n                }}\n              >\n                <Typography variant=\"h5\" sx={{ mr: 'auto', ml: 1 }}>\n                  {`${name}`}\n                </Typography>\n                <Link\n                  href={`tel:${number.replaceAll(/[ \\-.()]/g, '')}`}\n                  underline={'none'}\n                >\n                  <Typography\n                    variant=\"h5\"\n                    sx={{ mr: 1 }}\n                  >{`${number}`}</Typography>\n                </Link>\n              </Box>\n              <Box\n                sx={{\n                  display: 'flex',\n                  flexWrap: { xs: 'wrap', sm: 'nowrap' },\n                  alignItems: 'center',\n                }}\n              >\n                <IconButton\n                  size=\"large\"\n                  color=\"inherit\"\n                  onClick={() => {\n                    onEdit({ id: id, name: name, number: number });\n                  }}\n                >\n                  <EditIcon fontSize=\"inherit\" />\n                </IconButton>\n\n                <IconButton\n                  size=\"large\"\n                  color=\"inherit\"\n                  onClick={() => {\n                    setConfirmDeleteId(id);\n                    // dispatch(deleteContactThunk(id));\n                  }}\n                >\n                  <DeleteForeverIcon fontSize=\"inherit\" />\n                </IconButton>\n              </Box>\n            </Card>\n          </ListItem>\n        ))}\n      </List>\n      {confirmDeleteId && (\n        <ConfirmDialog\n          title=\"Delete contact?\"\n          id={confirmDeleteId}\n          setOpen={setConfirmDeleteId}\n          onConfirm={item => {\n            dispatch(deleteContactThunk(item));\n          }}\n        >\n          Are you sure?\n        </ConfirmDialog>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\nContactList.propTypes = { onEdit: PropTypes.func.isRequired };\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\n\nimport { setFilter } from 'redux/filterSlice';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    if ((evt.target.name = 'filter')) {\n      dispatch(setFilter(evt.target.value));\n    }\n  };\n  return (\n    <TextField\n      label=\"Find contacts by name\"\n      id=\"standard-search\"\n      type=\"search\"\n      variant=\"standard\"\n      fullWidth\n      sx={{ mt: 3, mb: 3 }}\n      name=\"filter\"\n      value={filter}\n      onChange={handleChange}\n      autoComplete=\"off\"\n    />\n  );\n};\n\nexport default Filter;\n","import { Container } from '@mui/material';\nimport { AddButton } from 'components/AddButton';\nimport AddContactForm from 'components/AddContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { useEffect, useState } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIsLoggedIn } from 'redux/authSlice';\nimport {\n  addContactThunk,\n  editContactThunk,\n  fetchContactsThunk,\n} from 'redux/contactSlice/thunk';\nimport { getContacts, getError } from 'redux/selectors';\n\nconst ContactListPage = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [itemEdit, setItemEdit] = useState(null);\n  const errorMessage = useSelector(getError);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(fetchContactsThunk());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  useEffect(() => {\n    if (errorMessage) {\n      toast.error(errorMessage);\n    }\n  }, [errorMessage]);\n\n  const handleAddClick = () => {\n    setModalIsOpen(true);\n  };\n\n  const handleEditClick = values => {\n    setModalIsOpen(true);\n    setItemEdit(values);\n  };\n\n  const handleCloseModal = () => {\n    setModalIsOpen(false);\n    setItemEdit(null);\n  };\n\n  const handleSubmit = ({ id, name, number }) => {\n    if (\n      (id ? contacts.filter(({ id: cid }) => id !== cid) : contacts).some(\n        ({ name: cname }) => cname === name\n      )\n    ) {\n      toast.error(`${name} is already in contacts.`, { duration: 1500 });\n      return;\n    }\n\n    if (!id) {\n      dispatch(addContactThunk({ name: name, number: number }));\n    } else {\n      if (\n        !contacts.some(\n          ({ id: cid, name: cname, number: cnumber }) =>\n            id === cid && name === cname && number === cnumber\n        )\n      ) {\n        dispatch(editContactThunk({ id: id, name: name, number: number }));\n      }\n    }\n    setModalIsOpen(false);\n    setItemEdit(null);\n  };\n\n  return (\n    <>\n      <Container component={'main'}>\n        {modalIsOpen && (\n          <AddContactForm\n            modalIsOpen\n            formTitle={itemEdit ? 'Edit contact' : 'Add contact'}\n            onCancel={handleCloseModal}\n            onSubmit={handleSubmit}\n            itemData={itemEdit}\n          />\n        )}\n        <Filter />\n        <ContactList onEdit={handleEditClick} />\n        <AddButton onClick={handleAddClick} />\n      </Container>\n      <Toaster />\n    </>\n  );\n};\n\nexport default ContactListPage;\n"],"names":["AddButton","onClick","createPortal","Button","variant","size","startIcon","AddCircleOutline","sx","position","bottom","right","document","querySelector","propType","PropTypes","AddContactForm","onSubmit","onCancel","modalIsOpen","formTitle","itemData","validationSchema","yup","shape","name","min","matches","required","number","formik","useFormik","initialValues","values","id","Dialog","open","onClose","Box","component","noValidate","handleSubmit","DialogTitle","DialogContent","DialogContentText","TextField","type","margin","label","fullWidth","value","title","onChange","handleChange","onBlur","handleBlur","error","touched","errors","helperText","DialogActions","children","setOpen","onConfirm","color","onEdit","contacts","useSelector","getContacts","dispatch","useDispatch","filter","getFilter","useState","confirmDeleteId","setConfirmDeleteId","contactList","useMemo","toLowerCase","includes","toSorted","a","b","List","map","ListItem","Card","display","flexWrap","justifyContent","alignItems","width","flexDirection","xs","sm","Typography","mr","ml","Link","href","replaceAll","underline","IconButton","Edit","fontSize","DeleteForever","item","deleteContactThunk","mt","mb","evt","target","setFilter","autoComplete","isLoggedIn","getIsLoggedIn","setModalIsOpen","itemEdit","setItemEdit","errorMessage","getError","useEffect","fetchContactsThunk","toast","Container","cid","some","duration","cname","cnumber","editContactThunk","addContactThunk"],"sourceRoot":""}